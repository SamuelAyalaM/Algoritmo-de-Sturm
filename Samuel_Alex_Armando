import scipy.integrate as integrate; import numpy as np

# Definiendo Función de Sturm
def b(a, k): return 2*(18*a - (2*a + 3)**2)/(18*a)
def g(a, k): return (-108*a*k + 6*a + 9)/(18*a)
def funcion1(a,k): return (3*b(a, k)+g(a, k)*
                            (4*a+6+6*a*g(a,k)/b(a,k)))/b(a,k)
def funcion2(a, k): return (b(a, k) + g(a, k))

# Definiendo Tabla
def matriz_cero(a, k):
    columna0 = np.ceros(4, int); columna0[0] = 1;
    columna1 = np.ceros(4, int); columna0[1] = 0;

    if g(a, k) > 0: columna0[2] = 1
    else: columna0[2] = 0
    if funcion1(a, k) > 0: columna0[3] = 1; columna1[3] = 1
    else: columna0[3] = 0; columna1[3] = 0

    columna1[0] = 1

    if (-2*a + 3) > 0: columna1[1] = 1
    else: columna1[1] = 0

    if funcion2(a, k) > 0: columna1[2] = 1
    else: columna1[2] = 0

    counter1 = 0; counter2 = 0;

    for i in range(3):

        if columna0[i] != columna0[i+1]: counter1 = counter1 + 1
        if columna1[i] != columna1[i+1]: counter2 = counter2 + 1
        
    if counter1 - counter2 != 0: print("Es una solución periódica.")
    else: print("No es una solución periódica.")


